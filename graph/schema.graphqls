# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Song {
  id: String!
  title: String!
  artist: String!
  image: String!
  votes: Int!
}

type Session {
  id: Int!
  currentlyPlaying: Song
  queue: [Song!]
}

type User {
  id: Int!
  firstName: String
  lastName: String
  email: String
  sessionID: Int
}

type Token {
  jwt: String!
}

enum QueueAction {
  PLAY
  PAUSE
  ADVANCE
}

input SongUpdate {
  id: String!
  title: String
  artist: String
  image: String
  vote: Int!
}

input NewUser {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input UserLogin {
  email: String!
  password: String!
}

input SpotifyCreds {
  accessToken: String!
  refreshToken: String!
}

# Make this return an array of sessions so calling with no session ID returns all sessions
type Query {
  session(sessionID: Int): Session

  # Users
  user: User!
}

type Mutation {
  # Sessions

  # Figure out what this is supposed to return
  createSession(userID: Int!): User!
  updateQueue(sessionID: Int!, song: SongUpdate!): Session!
  updateCurrentlyPlaying(sessionID: Int!, action: QueueAction!): Session!

  # Users
  createUser(newUser: NewUser!): Token!
  login(userLogin: UserLogin!): Token!

  # Spotify
  updateSpotifyToken(spotifyCreds: SpotifyCreds!): User!
}

type Subscription {
  sessionUpdated(sessionID: Int!): Session!
}